name: release packages

on:
    push:
        branches:
            - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: checkoutRepo
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.ACTION_TOKEN }}
                  fetch-depth: 0

            - name: setupGo
              uses: actions/setup-go@v4
              with:
                  go-version: '1.24'

            - name: useNodeJs
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'

            - name: installCorepack
              run: npm install -g corepack@0.31.0

            - name: enableCorepack
              run: corepack enable

            - name: installDependencies
              run: pnpm install --frozen-lockfile

            - name: checkIfCommitHelperGoWillBePublished
              id: checkCommitHelperGo
              run: |
                  pnpm changeset status > changeset-status.txt
                  isPublished=$(grep -q "@naverpay/commithelper-go" changeset-status.txt && echo "true" || echo "false")
                  if [ "$isPublished" = "false" ]; then
                    echo "commithelperGoWillBePublished=false" >> $GITHUB_ENV
                  else
                    echo "commithelperGoWillBePublished=true" >> $GITHUB_ENV
                  fi

            - name: buildNodePackages
              run: pnpm build

            - name: createReleasePullRequestOrPublishToNpm
              id: changesets
              uses: changesets/action@v1
              with:
                  title: 'ðŸš€ version changed packages'
                  commit: 'ðŸ“¦ bump changed packages version'
                  publish: pnpm release
              env:
                  GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: getReleaseUploadUrl
              id: getRelease
              if: env.commithelperGoWillBePublished == 'true'
              run: |
                  packageVersion=$(cat packages/commithelper-go/package.json | jq -r '.version')
                  releaseTag="@naverpay/commithelper-go@$packageVersion"
                  apiUrl="https://api.github.com/repos/NaverPayDev/cli/releases/tags/$releaseTag"
                  uploadUrl=$(curl -s -H "Authorization: Bearer ${{ secrets.ACTION_TOKEN }}" $apiUrl | jq -r '.upload_url' | sed 's/{?name,label}//')
                  echo "upload_url=$uploadUrl" >> $GITHUB_ENV

            - name: uploadWindowsBinary
              if: env.commithelperGoWillBePublished == 'true'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ env.upload_url }}
                  asset_path: packages/commithelper-go/bin/commithelper-go-windows-amd64.exe
                  asset_name: commithelper-go-windows-amd64.exe
                  asset_content_type: application/octet-stream

            - name: uploadMacosAmd64Binary
              if: env.commithelperGoWillBePublished == 'true'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ env.upload_url }}
                  asset_path: packages/commithelper-go/bin/commithelper-go-darwin-amd64
                  asset_name: commithelper-go-darwin-amd64
                  asset_content_type: application/octet-stream

            - name: uploadMacosArm64Binary
              if: env.commithelperGoWillBePublished == 'true'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ env.upload_url }}
                  asset_path: packages/commithelper-go/bin/commithelper-go-darwin-arm64
                  asset_name: commithelper-go-darwin-arm64
                  asset_content_type: application/octet-stream

            - name: uploadLinuxBinary
              if: env.commithelperGoWillBePublished == 'true'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ env.upload_url }}
                  asset_path: packages/commithelper-go/bin/commithelper-go-linux-amd64
                  asset_name: commithelper-go-linux-amd64
                  asset_content_type: application/octet-stream
